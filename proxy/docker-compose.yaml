version: "3.7"

services:

    reverse-proxy:
        image: "jwilder/nginx-proxy:latest"
        container_name: "reverse-proxy"
        volumes:
            - "html:/usr/share/nginx/html"
            - "dhparam:/etc/nginx/dhparam"
            - "vhost:/etc/nginx/vhost.d"
            - "certs:/etc/nginx/certs"
            - "/run/docker.sock:/tmp/docker.sock:ro"
        restart: "always"
        networks: 
            - "net"
        ports:
            - "80:80"
            - "443:443"
        labels:
            - "com.centurylinklabs.watchtower.enable=true"
            
    letsencrypt:
        image: "jrcs/letsencrypt-nginx-proxy-companion:latest"
        container_name: "letsencrypt-helper"
        volumes:
            - "html:/usr/share/nginx/html"
            - "dhparam:/etc/nginx/dhparam"
            - "vhost:/etc/nginx/vhost.d"
            - "certs:/etc/nginx/certs"
            - "/run/docker.sock:/var/run/docker.sock:ro"
        environment:
            NGINX_PROXY_CONTAINER: "reverse-proxy"
            DEFAULT_EMAIL: ${PROXY_ADMIN_EMAIL}
        restart: "always"
        depends_on:
            - "reverse-proxy"
        networks: 
            - "net"
        labels:
            - "com.centurylinklabs.watchtower.enable=true"
volumes:
  certs:
    driver_opts:
        type: nfs
        o: bind
        device: ${PATH_CERTS}
  html:  
    driver_opts:
        type: nfs
        o: bind
        device: ${PATH_HTML}
  vhost: 
    driver_opts:
        type: nfs
        o: bind
        device: ${PATH_VHOST}
  dhparam: 
    driver_opts:
        type: nfs
        o: bind
        device: ${PATH_DHPARAM}
    

networks:
  net:
    external: true